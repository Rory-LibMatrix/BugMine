@page "/Projects"
@using LibMatrix.Homeservers
<h3>Projects</h3>

@if (Client == null) {
    <p>Authenticating... <SimpleSpinner/></p>
}
else if (Projects is null) {
    <p>Loading projects... <SimpleSpinner/></p>
}
else if (Projects.Count == 0) {
    <p>There are no projects to display.</p>
}
else {
    <div class="projects">
        @foreach (var project in Projects) {
            <div class="card project-card" @onclick="@(()=>Navigate(project))">
                @if (string.IsNullOrWhiteSpace(project.Info.ProjectIcon)) {
                    <img class="project-icon" src="/icon-512.png">
                }
                else {
                    <img class="project-icon" src="/icon-512.png">
                }
                <span class="project-name">@project.Info.Name</span>
            </div>
            @* <p>@project.Info.Name</p> *@
        }
    </div>
}

<p>Did not find the project board you are looking for?</p>
<LinkButton href="/Projects/New">Create new board</LinkButton>

@code {

    private BugMineClient? Client { get; set; }
    private List<BugMineProject>? Projects { get; set; }
    private CancellationTokenSource? _cts = new();

    protected override async Task OnInitializedAsync() {
        Client = await BugMineStorage.GetCurrentSessionOrNavigate();
        if (Client == null) {
            return;
        }
        StateHasChanged();

        int count = 0;
        SemaphoreSlim semaphore = new(16, 16);
        await foreach (var project in Client.GetProjects(semaphore, ignoreInvalidBoards: true)) {
            Projects ??= [];
            Projects.Add(project);
            if(count++ <= 250 || count % 4 == 0)
                StateHasChanged();
        }

        Projects ??= [];
        StateHasChanged();
    }

    private async Task Navigate(BugMineProject project) {
        Console.WriteLine($"Navigating to {project.ProjectSlug}");
        NavigationManager.NavigateTo($"/Projects/{project.ProjectSlug}/");
    }

}